#!/bin/bash

# ===============================================
# Script de d√©ploiement Azure Web App (Linux/macOS)
# D√©ploie une Web App Linux avec App Service Plan
# ===============================================

set -euo pipefail

# ===============================================
# Configuration par d√©faut
# ===============================================
LOCATION="France Central"
SKU="Basic"
SKU_CODE="B1"
LINUX_FX_VERSION="PYTHON|3.11"
TEMPLATE_FILE="./arm-template.json"

# ===============================================
# Fonctions utilitaires
# ===============================================
print_info() {
    echo -e "\033[36m‚ÑπÔ∏è  $1\033[0m"
}

print_success() {
    echo -e "\033[32m‚úÖ $1\033[0m"
}

print_error() {
    echo -e "\033[31m‚ùå $1\033[0m"
}

print_warning() {
    echo -e "\033[33m‚ö†Ô∏è  $1\033[0m"
}

print_usage() {
    echo "Usage: $0 -g <resource-group> -n <web-app-name> [options]"
    echo ""
    echo "Options obligatoires:"
    echo "  -g, --resource-group    Nom du groupe de ressources"
    echo "  -n, --name             Nom de l'application web"
    echo ""
    echo "Options facultatives:"
    echo "  -l, --location         Localisation Azure (d√©faut: France Central)"
    echo "  -p, --plan             Nom du plan d'h√©bergement (d√©faut: <nom-app>-plan)"
    echo "  -s, --sku              Niveau SKU (d√©faut: Basic)"
    echo "  -c, --sku-code         Code SKU (d√©faut: B1)"
    echo "  -r, --runtime          Runtime Linux (d√©faut: PYTHON|3.11)"
    echo "  -t, --template         Fichier template ARM (d√©faut: ./arm-template.json)"
    echo "  -h, --help             Afficher cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0 -g myResourceGroup -n myWebApp"
    echo "  $0 -g myRG -n myApp -l \"West Europe\" -s Standard -c S1"
}

# ===============================================
# Analyse des arguments
# ===============================================
while [[ $# -gt 0 ]]; do
    case $1 in
        -g|--resource-group)
            RESOURCE_GROUP="$2"
            shift 2
            ;;
        -n|--name)
            WEB_APP_NAME="$2"
            shift 2
            ;;
        -l|--location)
            LOCATION="$2"
            shift 2
            ;;
        -p|--plan)
            APP_SERVICE_PLAN_NAME="$2"
            shift 2
            ;;
        -s|--sku)
            SKU="$2"
            shift 2
            ;;
        -c|--sku-code)
            SKU_CODE="$2"
            shift 2
            ;;
        -r|--runtime)
            LINUX_FX_VERSION="$2"
            shift 2
            ;;
        -t|--template)
            TEMPLATE_FILE="$2"
            shift 2
            ;;
        -h|--help)
            print_usage
            exit 0
            ;;
        *)
            print_error "Option inconnue: $1"
            print_usage
            exit 1
            ;;
    esac
done

# V√©rification des param√®tres obligatoires
if [[ -z "${RESOURCE_GROUP:-}" ]] || [[ -z "${WEB_APP_NAME:-}" ]]; then
    print_error "Les param√®tres -g (resource-group) et -n (name) sont obligatoires"
    print_usage
    exit 1
fi

# Configuration du nom du plan d'h√©bergement par d√©faut
APP_SERVICE_PLAN_NAME="${APP_SERVICE_PLAN_NAME:-${WEB_APP_NAME}-plan}"

# ===============================================
# V√©rification des pr√©requis
# ===============================================
print_info "V√©rification des pr√©requis..."

# V√©rifier si Azure CLI est install√©
if ! command -v az &> /dev/null; then
    print_error "Azure CLI n'est pas install√©. Installez-le depuis: https://docs.microsoft.com/en-us/cli/azure/install-azure-cli"
    exit 1
fi

# V√©rifier la version d'Azure CLI
AZ_VERSION=$(az version --query '"azure-cli"' -o tsv)
print_success "Azure CLI version $AZ_VERSION d√©tect√©"

# V√©rifier si l'utilisateur est connect√©
if ! az account show &> /dev/null; then
    print_error "Vous n'√™tes pas connect√© √† Azure. Utilisez 'az login'"
    exit 1
fi

ACCOUNT_NAME=$(az account show --query name -o tsv)
print_success "Connect√© √† Azure: $ACCOUNT_NAME"

# V√©rifier si le template existe
if [[ ! -f "$TEMPLATE_FILE" ]]; then
    print_error "Le fichier template '$TEMPLATE_FILE' n'existe pas"
    exit 1
fi

# ===============================================
# Variables de d√©ploiement
# ===============================================
SUBSCRIPTION_ID=$(az account show --query id -o tsv)
TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
DEPLOYMENT_NAME="webapp-deployment-$TIMESTAMP"

print_info "Configuration du d√©ploiement:"
echo "  ‚Ä¢ Subscription ID: $SUBSCRIPTION_ID"
echo "  ‚Ä¢ Resource Group: $RESOURCE_GROUP"
echo "  ‚Ä¢ Web App Name: $WEB_APP_NAME"
echo "  ‚Ä¢ Location: $LOCATION"
echo "  ‚Ä¢ App Service Plan: $APP_SERVICE_PLAN_NAME"
echo "  ‚Ä¢ SKU: $SKU ($SKU_CODE)"
echo "  ‚Ä¢ Runtime: $LINUX_FX_VERSION"

# ===============================================
# Cr√©ation du groupe de ressources
# ===============================================
print_info "V√©rification/Cr√©ation du groupe de ressources..."

if az group exists --name "$RESOURCE_GROUP" | grep -q "false"; then
    print_info "Cr√©ation du groupe de ressources $RESOURCE_GROUP..."
    az group create --name "$RESOURCE_GROUP" --location "$LOCATION"
    print_success "Groupe de ressources cr√©√© avec succ√®s"
else
    print_success "Groupe de ressources $RESOURCE_GROUP existe d√©j√†"
fi

# ===============================================
# D√©ploiement du template ARM
# ===============================================
print_info "D√©marrage du d√©ploiement ARM..."

# Cr√©ation du fichier de param√®tres temporaire
PARAM_FILE=$(mktemp)
cat > "$PARAM_FILE" << EOF
{
    "subscriptionId": {"value": "$SUBSCRIPTION_ID"},
    "resourceGroupName": {"value": "$RESOURCE_GROUP"},
    "name": {"value": "$WEB_APP_NAME"},
    "location": {"value": "$LOCATION"},
    "hostingPlanName": {"value": "$APP_SERVICE_PLAN_NAME"},
    "serverFarmResourceGroup": {"value": "$RESOURCE_GROUP"},
    "alwaysOn": {"value": true},
    "ftpsState": {"value": "Disabled"},
    "autoGeneratedDomainNameLabelScope": {"value": "TenantReuse"},
    "sku": {"value": "$SKU"},
    "skuCode": {"value": "$SKU_CODE"},
    "workerSize": {"value": "0"},
    "workerSizeId": {"value": "0"},
    "numberOfWorkers": {"value": "1"},
    "linuxFxVersion": {"value": "$LINUX_FX_VERSION"}
}
EOF

# Fonction de nettoyage
cleanup() {
    rm -f "$PARAM_FILE"
}
trap cleanup EXIT

print_info "Ex√©cution du d√©ploiement ARM..."

if az deployment group create \
    --resource-group "$RESOURCE_GROUP" \
    --name "$DEPLOYMENT_NAME" \
    --template-file "$TEMPLATE_FILE" \
    --parameters "@$PARAM_FILE"; then
    
    print_success "D√©ploiement ARM termin√© avec succ√®s!"
    
    # R√©cup√©ration des informations de la Web App
    print_info "R√©cup√©ration des informations de d√©ploiement..."
    
    WEB_APP_URL=$(az webapp show --name "$WEB_APP_NAME" --resource-group "$RESOURCE_GROUP" --query "defaultHostName" -o tsv)
    WEB_APP_STATE=$(az webapp show --name "$WEB_APP_NAME" --resource-group "$RESOURCE_GROUP" --query "state" -o tsv)
    
    print_success "Informations de la Web App:"
    echo "  ‚Ä¢ Nom: $WEB_APP_NAME"
    echo "  ‚Ä¢ URL: https://$WEB_APP_URL"
    echo "  ‚Ä¢ √âtat: $WEB_APP_STATE"
    echo "  ‚Ä¢ Groupe de ressources: $RESOURCE_GROUP"
    
    # Configuration post-d√©ploiement
    print_info "Configuration post-d√©ploiement..."
    print_info "Vous pouvez maintenant configurer vos variables d'environnement avec:"
    print_warning "az webapp config appsettings set --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP --settings KEY=VALUE"
    
    # R√©sum√© final
    print_success "üéâ D√©ploiement termin√© avec succ√®s!"
    print_info "Prochaines √©tapes recommand√©es:"
    echo "1. Configurer les variables d'environnement de votre application"
    echo "2. D√©ployer votre code via Azure CLI, GitHub Actions, ou VS Code"
    echo "3. Configurer un nom de domaine personnalis√© si n√©cessaire"
    echo "4. Activer Application Insights pour le monitoring"
    
    echo ""
    print_success "üåê Votre application est accessible √†: https://$WEB_APP_URL"
    
else
    print_error "√âchec du d√©ploiement ARM"
    exit 1
fi